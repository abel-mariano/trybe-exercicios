/* üöÄ Exerc√≠cio 2

- A fun√ß√£o myFizzBuzz(num) recebe um n√∫mero num como par√¢metro. Caso num seja um n√∫mero divis√≠vel por 3 e 5, a fun√ß√£o retorna "fizzbuzz". Caso num seja um n√∫mero divis√≠vel apenas por 3, retorna "fizz". E caso num seja um n√∫mero divis√≠vel apenas por 5, retorna "buzz". Se num for um n√∫mero que n√£o √© divis√≠vel nem por 3 e nem por 5, a fun√ß√£o retorna o pr√≥prio n√∫mero num. Caso num n√£o seja um n√∫mero, a fun√ß√£o retorna false.

 - Execute a fun√ß√£o myFizzBuzz(num), sendo num um n√∫mero divis√≠vel por 3 e 5, e verifique se o
   retorno √© o esperado.
 - Execute a fun√ß√£o myFizzBuzz(num), sendo num um n√∫mero divis√≠vel por 3, e verifique se o retorno √©
   o esperado.
 - Execute a fun√ß√£o myFizzBuzz(num), sendo num um n√∫mero divis√≠vel por 5, e verifique se o retorno √©
   o esperado.
 - Execute a fun√ß√£o myFizzBuzz(num), sendo num um n√∫mero que n√£o √© divis√≠vel por 3 ou 5, e verifique
   se o retorno √© o esperado.
 - Execute a fun√ß√£o myFizzBuzz(num), sendo num um par√¢metro que n√£o √© um n√∫mero, e verifique se o
   retorno √© o esperado. */
  
// ‚û°Ô∏èSolu√ß√£o:

function myFizzBuzz(num) {
  if (typeof num !== 'number') return false;
  if (num % 3 === 0 && num % 5 === 0) return 'fizzbuzz';
  if (num % 3 === 0) return 'fizz';
  if (num % 5 === 0) return 'buzz';
  return num;
}

module.exports = myFizzBuzz;